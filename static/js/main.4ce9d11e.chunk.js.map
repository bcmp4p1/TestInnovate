{"version":3,"sources":["api.js","App.jsx","index.jsx"],"names":["getUserByName","userName","a","fetch","response","json","App","useState","user","setUser","isHome","setIsHome","isProfile","setIsProfile","isLogin","setIsLogin","login","setLogin","password","setPassword","isError","setIsError","onClick","type","name","surname","onSubmit","selectedUser","placeholder","required","value","onChange","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEaA,EAAa,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACJC,MAAM,GAAD,OAHb,cAGa,kBAAsBF,IADvB,cACrBG,EADqB,yBAGpBA,EAASC,QAHW,2CAAH,sDCEbC,G,MAAM,WAAO,IAAD,EACCC,mBAAS,MADV,mBAChBC,EADgB,KACVC,EADU,OAEKF,oBAAS,GAFd,mBAEhBG,EAFgB,KAERC,EAFQ,OAGWJ,oBAAS,GAHpB,mBAGhBK,EAHgB,KAGLC,EAHK,OAION,oBAAS,GAJhB,mBAIhBO,EAJgB,KAIPC,EAJO,OAKGR,mBAAS,IALZ,mBAKhBS,EALgB,KAKTC,EALS,OAMSV,mBAAS,IANlB,mBAMhBW,EANgB,KAMNC,EANM,OAOOZ,oBAAS,GAPhB,mBAOhBa,EAPgB,KAOPC,EAPO,KA6CvB,OACE,qCACE,mCACE,wBACEC,QAxCW,WACjBX,GAAU,GACVI,GAAW,GACXF,GAAa,IAsCPU,KAAK,SAFP,kBAOA,wBACED,QAzCc,WAChBd,GACFG,GAAU,GACVI,GAAW,GACXF,GAAa,KAEbF,GAAU,GACVI,GAAW,GACXF,GAAa,KAkCTU,KAAK,SAFP,qBAOA,wBACED,QApCY,WAClBX,GAAU,GACVI,GAAW,GACXF,GAAa,IAkCPU,KAAK,SAFP,sBAOF,iCACE,2CAECb,GACC,2CAGDE,GAAaJ,GACZ,qCACE,sCAEGA,EAAKgB,QAER,yCAEGhB,EAAKiB,cAKXX,GACC,mCACE,uBACEY,SA3DS,WACnB,IAAMC,EAAe3B,EAAcgB,GAE/BW,GAAgBA,EAAaT,WAAaA,GAC5CT,EAAQkB,GACRd,GAAa,GACbE,GAAW,IAEXM,GAAW,IAkDL,UAGE,uBACEE,KAAK,OACLK,YAAY,mBACZC,UAAQ,EACRC,MAAOd,EACPe,SAAU,SAAAC,GAAK,OAAIf,EAASe,EAAMC,OAAOH,UAE3C,uBACEP,KAAK,WACLK,YAAY,sBACZC,UAAQ,EACRC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAAYa,EAAMC,OAAOH,UAE7CV,GACC,2DAEF,wBACEG,KAAK,SADP,iCC9GdW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ce9d11e.chunk.js","sourcesContent":["const BASE_URL = 'https://url';\n\nexport const getUserByName = async(userName) => {\n  const response = await fetch(`${BASE_URL}/users/${userName}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport { getUserByName } from './api';\nimport './App.scss';\n\nexport const App = () => {\n  const [user, setUser] = useState(null);\n  const [isHome, setIsHome] = useState(true);\n  const [isProfile, setIsProfile] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  const handleHome = () => {\n    setIsHome(true);\n    setIsLogin(false);\n    setIsProfile(false);\n  };\n\n  const handleProfile = () => {\n    if (user) {\n      setIsHome(false);\n      setIsLogin(false);\n      setIsProfile(true);\n    } else {\n      setIsHome(false);\n      setIsLogin(true);\n      setIsProfile(false);\n    }\n  };\n\n  const handleLogin = () => {\n    setIsHome(false);\n    setIsLogin(true);\n    setIsProfile(false);\n  };\n\n  const handleSubmit = () => {\n    const selectedUser = getUserByName(login);\n\n    if (selectedUser && selectedUser.password === password) {\n      setUser(selectedUser);\n      setIsProfile(true);\n      setIsLogin(false);\n    } else {\n      setIsError(true);\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <button\n          onClick={handleHome}\n          type=\"button\"\n        >\n          Home\n        </button>\n\n        <button\n          onClick={handleProfile}\n          type=\"button\"\n        >\n          Profile\n        </button>\n\n        <button\n          onClick={handleLogin}\n          type=\"button\"\n        >\n          Login\n        </button>\n      </header>\n      <main>\n        <h1>Test Task</h1>\n\n        {isHome && (\n          <h2>Home page</h2>\n        )}\n\n        {isProfile && user && (\n          <>\n            <p>\n              Name:\n              {user.name}\n            </p>\n            <p>\n              Surname:\n              {user.surname}\n            </p>\n          </>\n        )}\n\n        {isLogin && (\n          <>\n            <form\n              onSubmit={handleSubmit}\n            >\n              <input\n                type=\"text\"\n                placeholder=\"enter your email\"\n                required\n                value={login}\n                onChange={event => setLogin(event.target.value)}\n              />\n              <input\n                type=\"password\"\n                placeholder=\"enter your password\"\n                required\n                value={password}\n                onChange={event => setPassword(event.target.value)}\n              />\n              {isError && (\n                <p>Please enter valid details</p>\n              )}\n              <button\n                type=\"button\"\n              >\n                submit\n              </button>\n            </form>\n          </>\n        )}\n      </main>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}